name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  workflow_dispatch:

jobs:
  run-and-store:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Docker container and store SQLite
        id: run_container
        run: |
          docker run --name my-app-container \
          -v ./out/:/app/out/ \
          ghcr.io/${{ github.repository }}/my-app:latest \
          run_scrap.sh | tee result.log
          echo outfile=$(tail -1 result.log) >> $GITHUB_ENV

      - name: Store SQLite database as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gupy_from_csv.sqlite
          path: ${{ github.workspace }}/${{ env.outfile }}

      - name: Set up Pages directory
        run: |
          mkdir -p ./docs
          echo '=== an sqlpage
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>SQLite Viewer</title>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.6.2/sql-wasm.js"></script>
            <style>
              body {
                font-family: Arial, sans-serif;
              }
              #data-table {
                border-collapse: collapse;
                width: 100%;
              }
              #data-table th, #data-table td {
                border: 1px solid #ddd;
                padding: 8px;
              }
              #data-table th {
                background-color: #f2f2f2;
                text-align: left;
              }
            </style>
          </head>
          <body>
            <h1>SQLite Database Viewer</h1>
            <input type="file" id="dbfile" />
            <button onclick="loadDatabase()">Load Database</button>
            <table id="data-table"></table>

            <script>
              async function loadDatabase() {
                const fileInput = document.getElementById("dbfile");
                if (fileInput.files.length === 0) {
                  alert("Please select a database file.");
                  return;
                }
                
                const file = fileInput.files[0];
                const arrayBuffer = await file.arrayBuffer();
                const SQL = await initSqlJs({ locateFile: filename => `https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.6.2/${filename}` });
                const db = new SQL.Database(new Uint8Array(arrayBuffer));
                
                const res = db.exec("SELECT * FROM your_table_name"); // Change "your_table_name" to your actual table name
                if (res.length > 0) {
                  const columns = res[0].columns;
                  const values = res[0].values;
                  const table = document.getElementById("data-table");
                  
                  // Create table header
                  const thead = document.createElement("thead");
                  const tr = document.createElement("tr");
                  columns.forEach(col => {
                    const th = document.createElement("th");
                    th.textContent = col;
                    tr.appendChild(th);
                  });
                  thead.appendChild(tr);
                  table.appendChild(thead);
                  
                  // Create table body
                  const tbody = document.createElement("tbody");
                  values.forEach(row => {
                    const tr = document.createElement("tr");
                    row.forEach(cell => {
                      const td = document.createElement("td");
                      td.textContent = cell;
                      tr.appendChild(td);
                    });
                    tbody.appendChild(tr);
                  });
                  table.appendChild(tbody);
                } else {
                  alert("No data found in the table.");
                }
              }
            </script>
          </body>
          </html>
          ' > ./docs/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
