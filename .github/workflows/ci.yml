name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  workflow_dispatch:

jobs:
  run-and-store:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Docker and store SQLite
        id: run_container
        run: |
          docker run --name my-app-container \
          -v ./out/:/app/out/ \
          ghcr.io/${{ github.repository }}/my-app:latest \
          run_scrap.sh | tee result.log
          echo outfile=$(tail -1 result.log) >> $GITHUB_ENV

      - name: Store SQLite database as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gupy_from_csv.sqlite
          path: ${{ github.workspace }}/${{ env.outfile }}

      # - name: Prepare HTML for GitHub Pages
      #   id: get-artifact-url
      #   run: |
      #     mkdir -p docs
      #     echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
      #     echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" >> $GITHUB_ENV
      #     sed -e "s/YOUR_USERNAME/${{ github.repository_owner }}/g" \
      #         -e "s/YOUR_REPO_NAME/${{ github.event.repository.name }}/g" \
      #         -e "s/LATEST_ARTIFACT_ID/${artifact-id}/g" \
      #         sqlpage.html > ./docs/index.html
      #     grep https docs/index.html

      # - name: Setup GitHub Pages
      #   uses: actions/configure-pages@v5

      # - name: Upload GitHub Pages artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: './docs'

      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4

  fetch-artifact-url:
    runs-on: ubuntu-latest
    needs: run-and-store
    steps:
      - name: Fetch Artifact URL
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the list of artifacts
          ARTIFACTS=$(curl -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts)
          
          # Extract artifact ID
          echo $ARTIFACTS
          jq -r '.artifacts[].id' || true

          echo "$ARTIFACTS" | jq -c '.artifacts[]' | while IFS= read -r artifact; do
            ARTIFACT_ID=$(echo "$artifact" | jq -r '.id')
            ARTIFACT_NAME=$(echo "$artifact" | jq -r '.name')
            echo "Artifact Name: $ARTIFACT_NAME"
            echo "Artifact ID: $ARTIFACT_ID"
            echo "Download URL: https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/$ARTIFACT_ID"
            echo ""
          done

          ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].id')

          # Print artifact details
          echo "Artifact ID: $ARTIFACT_ID"

          # Print download URL
          echo "Download URL: https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/$ARTIFACT_ID"
