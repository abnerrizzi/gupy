name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  workflow_dispatch:

jobs:
  run-and-store:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Docker and store SQLite
        id: run_container
        run: |
          docker run --name my-app-container \
          -v ./out/:/app/out/ \
          ghcr.io/${{ github.repository }}/my-app:latest \
          run_scrap.sh | tee result.log
          mv $(tail -1 result.log) out/sqlite.db

      - name: Store SQLite database as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gupy_from_csv.sqlite
          path: ${{ github.workspace }}/out/sqlite.db

      - name: Prepare HTML for GitHub Pages
        id: get-artifact-url
        run: |
          mkdir -p docs
          echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" >> $GITHUB_ENV
          sed -e "s/YOUR_USERNAME/${{ github.repository_owner }}/g" \
              -e "s/YOUR_REPO_NAME/${{ github.event.repository.name }}/g" \
              -e "s/LATEST_ARTIFACT_ID/${artifact-id}/g" \
              sqlpage.html > ./docs/index.html
          grep https docs/index.html

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
